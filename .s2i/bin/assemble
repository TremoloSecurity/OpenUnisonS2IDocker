#!/bin/bash -e
#
# S2I assemble script for the 'openunison-centos7' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

APACHE_HOME=/usr/local
TOMCAT_HOME=`find $APACHE_HOME -type d -name 'apache-tomcat-*' -print`
MAVEN_HOME=`find $APACHE_HOME -type d -name 'apache-maven-*' -print`

if [[ "$1" == "-h" ]]; then
	# If the 'openunison-centos7' assemble script is executed with '-h' flag,
	# print the usage.
	exec /usr/libexec/s2i/usage
fi

# Restore artifacts from the previous build (if they exist).
#
#if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
#  echo "---> Restoring build artifacts..."
#  mv /tmp/artifacts/. ./
#fi




function setup_webapps() {
  echo "Backing up default webapps directory..."
  tar -c -f /tmp/orig.tar $TOMCAT_HOME/webapps/*
  gzip /tmp/orig.tar

  echo "Emptying webapps directory..."
  rm -rf $TOMCAT_HOME/webapps/*
  mv /tmp/orig.tar.gz $TOMCAT_HOME/webapps/

  echo "Copying war file to webapps/ROOT.war..."
  warFileName=`find /tmp/src -type f -name openunison*.war -print`
  cp $warFileName $TOMCAT_HOME/webapps/ROOT.war
}

function config_openunison() {
  # /etc/openunison is hard-coded into the configuration files, so need to figure out how to update files as
  # well as this script if we want to be able to adjust at run time
  OPENUNISON_CFG_HOME="/etc/openunison"

  echo "Setting up OpenUnison configuration files..."
  if [[ ! -d $OPENUNISON_CFG_HOME ]]; then
    echo "Creating $OPENUNISON_CFG_HOME..."
    mkdir $OPENUNISON_CFG_HOME
  fi

  echo "Copying configuration files..."
  for file in unisonService.props unison.xml unisonKeyStore.jks myvd.conf log4j.xml
  do
    if [ -f /tmp/src/$file ]; then
      echo "... $file"
      cp /tmp/src/$file $OPENUNISON_CFG_HOME 
    else
      echo "... $file not found"
    fi
  done
}


# Testing and debug info.  TODO: Delete this!
echo "Default working dir: "
pwd
cd /tmp/src
echo "Current working dir: "
pwd
echo "whoami: "
whoami
echo "TOMCAT_HOME: $TOMCAT_HOME"
echo "MAVEN_HOME: $MAVEN_HOME"


echo "---> Looking for OpenUnison war file or pom.xml..."
#numWarFiles=`find /tmp/src -maxdepth 1 -type f -iname *.war -print | wc -l`
numWarFiles=`find /tmp/src/ -type f -name openunison*.war -print | wc -l`
echo "numWarFiles: $numWarFiles"
if [ $numWarFiles -eq 1 ]; then
  echo "Found OpenUnison war file. Deploying..."
  setup_webapps
elif [ -f "/tmp/src/openunison/pom.xml" ]; then
# If a pom.xml is present, this is a normal build scenario so run maven.
  echo "Found pom.xml... attempting to build with 'mvn ${MAVEN_ARGS}'"
  
  if [ -z "$MAVEN_ARGS" ]; then
    export MAVEN_ARGS="package"
  fi
  if [ -z "$MAVEN_ARGS_APPEND" ]; then
    export MAVEN_ARGS="$MAVEN_ARGS $MAVEN_ARGS_APPEND"
  fi

  cd /tmp/src/openunison
  mvn --version
  echo "MAVEN_ARGS: $MAVEN_ARGS"
  mvn $MAVEN_ARGS

  ERR=$?
  if [ $ERR -ne 0 ]; then
    echo "Aborting due to error code $ERR from mvn package"
    exit $ERR
  fi

  echo "Copying context.xml..."
  if [ -f /tmp/src/context.xml ]; then
    echo "... context.xml"
    if [[ ! -d openunison/src/main/webapp/META-INF ]]; then
      echo "Creating META-INF directory..."
      mkdir openunison/src/main/webapp/META-INF
      cp /tmp/src/context.xml openunison/src/main/webapp/META-INF
    else
      echo "... context.xml not found"
    fi
  fi

  setup_webapps
fi

config_openunison

if [ -f /tmp/src/server.xml ]; then
  echo " ---> Configuring Tomcat for SSL..."
  mv $TOMCAT_HOME/conf/server.xml $TOMCAT_HOME/conf/server.xml.ORIG
  cp /tmp/src/server.xml $TOMCAT_HOME/conf/
fi

# TODO: Why is "Permission denied" when we try to remove this directory? It's owned by tremoloadmin.
#echo "Removing Maven..."
#rm -rf $MAVEN_HOME
#rm /usr/local/bin/mvn

# TODO: Deal with keys/keystores

echo "...done"

exit

